#!/usr/bin/env ruby
# frozen_string_literal: true

require "pathname"
ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile",
                                           Pathname.new(__FILE__).realpath)

require "rubygems"
require "bundler/setup"

require "optparse"
require "csv"
require "sanscript"
require "oj"
require "neatjson"

options = {}
optparse = OptionParser.new do |opts|
  opts.banner = "Usage: csv2nex [options] file.csv"
  opts.on("-t", "--transpose", "Transpose CSV") do
    options[:transpose] = true
  end
end
optparse.parse!

abort(optparse.banner) if ARGV.empty?

infile = ARGV.shift.to_s
if infile == "-"
  infile_data = STDIN.read
else
  infile = File.expand_path(infile)
  unless File.exist?(infile)
    STDERR.puts "File #{infile} not found."
    STDERR.puts optparse
    exit(1)
  end
  infile_data = File.read(infile, mode: "r:bom|utf-8")
end

infile_data.gsub!(/\A\u{FEFF}/, "")

csv = CSV.parse(infile_data)
csv = csv.transpose if options[:transpose]

cx = {
  "@context" => {
    "cx" => "https://collatex.net/json#",
    "witnesses" => { "@id" => "cx:witnesses" },
    "table" => { "@id" => "cx:table" },
  },
  "witnesses" => csv.first,
  "table" => csv.first.each_index.map do |wi|
    csv.each_with_object([]).with_index do |(c, acc), ci|
      next if ci.zero?
      token = c[wi]
      acc << (token.nil? ? [] : token.split(/\s+/).map { |t| { "t" => t } })
    end
  end,
}
STDOUT.puts JSON.neat_generate(cx, after_colon: 1, wrap: 80)
